{"version":3,"sources":["/Applications/MAMP/htdocs/weather/src/$_lazy_route_resource lazy","/Applications/MAMP/htdocs/weather/src/app/_services/data.service.ts","/Applications/MAMP/htdocs/weather/src/app/app.component.html","/Applications/MAMP/htdocs/weather/src/app/app.component.scss","/Applications/MAMP/htdocs/weather/src/app/app.component.ts","/Applications/MAMP/htdocs/weather/src/app/app.module.ts","/Applications/MAMP/htdocs/weather/src/environments/environment.ts","/Applications/MAMP/htdocs/weather/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/MAMP/htdocs/weather/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport { Observable } from 'rxjs/Rx';\n\n@Injectable()\nexport class DataService {\n\n  private apiUrlStates: string = \"https://secure.geonames.org/childrenJSON?geonameId=3469034&username=tiagogalczinski\";\n\n  private apiUrlCities: string = \"https://secure.geonames.org/childrenJSON?geonameId=\";\n\n  private apiUrlKey: string = \"6f5a29b1\";\n  private apiUrlWeather: string = \"https://api.hgbrasil.com/weather/?format=json-cors\";\n\n  constructor(private http: Http) { }\n\n  getStates(){\n    return this.http.get(this.apiUrlStates)\n      .map(res => res.json());\n  }\n\n  getCities(id){\n    return this.http.get(this.apiUrlCities+id)\n      .map(res => res.json())\n  }\n\n  getWeather(lat, lng){\n    return this.http.get(this.apiUrlWeather+\"&lat=\"+lat+\"&lon=\"+lng+\"&user_ip=remote&key=\"+this.apiUrlKey)\n      .map(res => res.json())\n  }\n\n}\n\n\n// http://embed.plnkr.co/cuMsdkK6SuTn41uQSeI6\n\n\n\n// WEBPACK FOOTER //\n// /Applications/MAMP/htdocs/weather/src/app/_services/data.service.ts","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n\\n    <mat-toolbar-row color=\\\"primary\\\">\\n\\n        <div class=\\\"container\\\">\\n            <button mat-icon-button>\\n                <mat-icon>opacity</mat-icon>\\n            </button>\\n            <span class=\\\"app-title\\\">Weather</span>\\n        </div>\\n\\n    </mat-toolbar-row>\\n\\n</mat-toolbar>\\n\\n<mat-card class=\\\"container\\\">\\n\\n    <form [formGroup]=\\\"regionForm\\\">\\n        <mat-form-field>\\n            <mat-select formControlName=\\\"estado\\\" placeholder=\\\"Estado\\\" (change)=\\\"onSelectState($event)\\\">\\n            <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.geonameId\\\">\\n                {{ state.toponymName }}\\n            </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n        \\n        <mat-form-field>\\n            <input formControlName=\\\"cidade\\\" matInput placeholder=\\\"Cidade\\\" aria-label=\\\"City\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"stateCtrl\\\">\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"onSelectCity($event)\\\">\\n            <mat-option *ngFor=\\\"let city of filteredStates | async\\\" [attr.data-lat]=\\\"city.lat\\\" [attr.data-lng]=\\\"city.lng\\\" [value]=\\\"city.toponymName\\\" >\\n                {{ city.toponymName }}\\n            </mat-option>\\n            </mat-autocomplete>\\n        </mat-form-field>\\n    </form>\\n\\n</mat-card>\\n\\n<mat-card class=\\\"container content-today\\\">\\n\\n    <div *ngFor=\\\"let f of forecast; let ii=index\\\">\\n        <div *ngIf=\\\"ii<1\\\" class=\\\"flex container-today\\\">\\n            <div *ngIf=\\\"f.condition=='storm'\\\" class=\\\"weather-container column1\\\">\\n                <ul>\\n                    <li>\\n                        <div class=\\\"icon-container rain thunderstorms\\\">\\n                            <div class=\\\"cloud\\\"></div>\\n                            <div class=\\\"rain-container\\\">\\n                            <div class=\\\"rain-drop\\\"></div>\\n                            <div class=\\\"rain-drop\\\"></div>\\n                            <div class=\\\"rain-drop\\\"></div>\\n                            <div class=\\\"rain-drop\\\"></div>\\n                            </div>\\n                            <div class=\\\"shadow\\\"></div>\\n                            <div class=\\\"lightning\\\"></div>\\n                        </div>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div *ngIf=\\\"f.condition=='clear_day'\\\" class=\\\"weather-container column1\\\">\\n                <ul>\\n                    <li>\\n                        <div class=\\\"icon-container\\\">\\n                            <div class=\\\"sun\\\"></div>\\n                        </div>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div *ngIf=\\\"f.condition=='cloud'\\\" class=\\\"weather-container column1\\\">\\n                <ul>\\n                    <li>\\n                        <div class=\\\"icon-container cloudy\\\">\\n                            <div class=\\\"cloud with-shadow\\\">\\n                            <div class=\\\"shadow\\\"></div>\\n                            </div>\\n                        </div>\\n                    </li>      \\n                </ul>\\n            </div>\\n            <div *ngIf=\\\"f.condition=='cloudly_day'\\\" class=\\\"weather-container column1\\\">\\n                <ul>\\n                    <li>\\n                        <div class=\\\"icon-container mostly-cloudy\\\">\\n                            <div class=\\\"sun\\\"></div>\\n                            <div class=\\\"cloud with-shadow\\\">\\n                            <div class=\\\"shadow\\\"></div>\\n                            </div>\\n                        </div>\\n                    </li>    \\n                </ul>\\n            </div>\\n\\n            <div class=\\\"column2\\\">\\n                <span class=\\\"today\\\">{{weather.temp}}º</span>\\n                <span>{{f.description}}</span>                \\n            </div>\\n\\n            <div>\\n                <div class=\\\"maxmin flex\\\"> <i class=\\\"material-icons\\\">keyboard_arrow_up</i> <span class=\\\"maxmin-label\\\"> {{f.max}}º </span> </div>\\n                <div class=\\\"maxmin flex\\\"> <i class=\\\"material-icons min\\\">keyboard_arrow_down</i> <span class=\\\"maxmin-label min\\\"> {{f.min}}º </span> </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</mat-card>\\n\\n<mat-card class=\\\"container content\\\">\\n    <table class=\\\"forecast-next\\\" cellspacing=\\\"0\\\" borderspacing=\\\"0\\\" align=\\\"center\\\">\\n        <tr *ngFor=\\\"let f of forecast; let i=index\\\">\\n                <td width=\\\"34%\\\" *ngIf=\\\"i>0\\\"> \\n                    <div class=\\\"maxmin flex\\\"> <i class=\\\"material-icons\\\">keyboard_arrow_up</i> <span class=\\\"maxmin-label\\\"> {{f.max}}º </span> </div>\\n                    <div class=\\\"maxmin flex\\\"> <i class=\\\"material-icons min\\\">keyboard_arrow_down</i> <span class=\\\"maxmin-label min\\\"> {{f.min}}º </span> </div>    \\n                </td>\\n                <td class=\\\"weekday\\\" *ngIf=\\\"i>0\\\">{{f.weekday}}</td>\\n                <td align=\\\"right\\\" *ngIf=\\\"i>0\\\"> {{f.description}}</td>\\n        </tr>\\n    </table>\\n</mat-card>\\n    \\n{{weather | json}}\\n\\n<BR><br>\\n<!-- LAST: {{ dataTemp|json }} -->\\n<br>\\n<!-- temperatura atual: {{ dataTemp.results.temp |json }} <br>\\ncondition: {{ dataTemp.results.forecast[0].condition |json }} <br>\\ndescription: {{ dataTemp.results.forecast[0].description |json }} <br>\\nmax: {{ dataTemp.results.forecast[0].max |json }} <br>\\nmin: {{ dataTemp.results.forecast[0].min |json }} <br> -->\\n\\n<Br>\\n<!-- \\n<table>\\n  <tr *ngFor=\\\"let forecast of dataTemp.results.forecast\\\" >\\n    <td>{{forecast.condition}}</td>\\n    <td>{{forecast.max}} - {{forecast.min}}</td>\\n    <td>{{forecast.weekday}}</td>\\n    <td>{{forecast.description}}</td>\\n  </tr>\\n</table>\\n<br><br> -->\\n<!-- {{states|json}} -->\\n\\n<Br>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/MAMP/htdocs/weather/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/MAMP/htdocs/weather/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component, Input } from '@angular/core';\nimport { DataService } from \"./_services/data.service\";\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { map } from 'rxjs/operators/map';\n\n//Models\nimport { State } from './_models/state';\nimport { City } from './_models/city';\nimport { Weather, Forecast } from './_models/weather';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n    //lista do combo estados\n    private states: State[] = []; \n    private cities: City[] = []; \n    private weather: Weather[] = [];\n    private forecast: Forecast[] = [];\n    public regionForm: FormGroup;\n    private dataTemp: {};\n\n    stateCtrl: FormControl;\n    filteredStates: Observable<any[]>;\n\n    constructor(private dS: DataService, private formBuilder: FormBuilder, ) { \n        // this.dataTemp = {\"by\":\"gps\",\"valid_key\":true,\"results\":{\"temp\":23,\"date\":\"27/01/2018\",\"time\":\"18:34\",\"condition_code\":\"26\",\"description\":\"Tempo nublado\",\"currently\":\"dia\",\"cid\":\"\",\"city\":\"Blumenau,\",\"img_id\":\"26\",\"humidity\":\"74\",\"wind_speedy\":\"11.27 km/h\",\"sunrise\":\"6:46 am\",\"sunset\":\"8:12 pm\",\"condition_slug\":\"cloud\",\"city_name\":\"Blumenau\",\"forecast\":[{\"date\":\"27/01\",\"weekday\":\"Sáb\",\"max\":\"24\",\"min\":\"18\",\"description\":\"Tempo nublado\",\"condition\":\"cloud\"},{\"date\":\"28/01\",\"weekday\":\"Dom\",\"max\":\"28\",\"min\":\"19\",\"description\":\"Tempo nublado\",\"condition\":\"cloud\"},{\"date\":\"29/01\",\"weekday\":\"Seg\",\"max\":\"25\",\"min\":\"21\",\"description\":\"Tempestades isoladas\",\"condition\":\"storm\"},{\"date\":\"30/01\",\"weekday\":\"Ter\",\"max\":\"28\",\"min\":\"17\",\"description\":\"Parcialmente nublado\",\"condition\":\"cloudly_day\"},{\"date\":\"31/01\",\"weekday\":\"Qua\",\"max\":\"26\",\"min\":\"21\",\"description\":\"Tempestades isoladas\",\"condition\":\"storm\"},{\"date\":\"01/02\",\"weekday\":\"Qui\",\"max\":\"28\",\"min\":\"21\",\"description\":\"Tempo nublado\",\"condition\":\"cloud\"},{\"date\":\"02/02\",\"weekday\":\"Sex\",\"max\":\"28\",\"min\":\"20\",\"description\":\"Ensolarado com muitas nuvens\",\"condition\":\"cloudly_day\"},{\"date\":\"03/02\",\"weekday\":\"Sáb\",\"max\":\"27\",\"min\":\"20\",\"description\":\"Ensolarado com muitas nuvens\",\"condition\":\"cloudly_day\"},{\"date\":\"04/02\",\"weekday\":\"Dom\",\"max\":\"25\",\"min\":\"18\",\"description\":\"Parcialmente nublado\",\"condition\":\"cloudly_day\"},{\"date\":\"05/02\",\"weekday\":\"Seg\",\"max\":\"25\",\"min\":\"18\",\"description\":\"Parcialmente nublado\",\"condition\":\"cloudly_day\"}]},\"execution_time\":0.0,\"from_cache\":true}\n\n        //TEMP CODE for calc max min\n        // var weekMax = 0;\n        // var weekMin = 99;\n        \n        // this.dataTemp.results.forecast.forEach(function(f) {\n        //     var max = f.max;\n        //     var min = f.min;\n        \n        //     if(max > weekMax) { weekMax = max }\n        //     if(min < weekMin) { weekMin = min }\n        // })\n    \n        //formbuild\n        this.regionForm = formBuilder.group({\n            estado: ['', [\n                Validators.required,\n                Validators.minLength(3)\n            ]],\n            cidade: ['', [\n                Validators.required,\n                Validators.minLength(3)\n            ]]\n        })\n\n        this.stateCtrl = new FormControl();\n        this.filteredStates = this.stateCtrl.valueChanges\n          .pipe(\n            startWith(''),\n            map(state => state ? this.filterStates(state) : this.cities.slice())\n          );\n    }\n\t\n\tngOnInit() {\n        //request do combo estados\n\t\tthis.dS.getStates()\n\t\t\t.subscribe(data => this.states = data.geonames);\n    }\n\n    onSelectState(event: any) {\n        this.dS.getCities(event.value)\n            .subscribe(data => this.cities = data.geonames)\n    }\n\n    onSelectCity(event: any) {\n        var lat = event.option._element.nativeElement.dataset.lat;\n        var lng = event.option._element.nativeElement.dataset.lng;\n        \n        this.dS.getWeather(lat,lng)\n            .subscribe(data => {\n                this.weather = data.results;\n                this.forecast = data.results.forecast;\n            })\n    }\n\n    filterStates(name: string) {\n        return this.cities.filter(state =>\n            state.toponymName.toLowerCase().indexOf(name.toLowerCase()) === 0);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/MAMP/htdocs/weather/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatInputModule, MatToolbarModule, MatIconModule, MatCardModule, MatDividerModule } from '@angular/material';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nimport { DataService } from \"./_services/data.service\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Applications/MAMP/htdocs/weather/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Applications/MAMP/htdocs/weather/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Applications/MAMP/htdocs/weather/src/main.ts"],"sourceRoot":"webpack:///"}